static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8082 # Exposed port for incoming traffic
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: product_service
                        - match:
                            prefix: "/inventory"
                          route:
                            cluster: sc_inventory
                http_filters:

                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        local logging = require("etc.envoy.logging")
                        function envoy_on_request(request_handle)
                          logging.log_request(request_handle)
                        end
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        oidc_provider:
                          issuer: http://localhost:8080/realms/master
                          payload_in_metadata: jwt_payload
                          forward_payload_header: x-jwt-payload
                          remote_jwks:
                            http_uri:
                              uri: http://localhost:8080/realms/master/protocol/openid-connect/certs
                              cluster: keycloak
                              timeout: 5s
                            cache_duration:
                              seconds: 300
                      rules:
                        - match: { prefix: / }
                          requires:
                            provider_name: oidc_provider
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: product_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: product_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: product-service, port_value: 8082 }

    - name: keycloak
      connect_timeout: 15s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: keycloak
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: keycloak, port_value: 8080 }

    - name: sc_inventory
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: sc_inventory
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: sc-inventory, port_value: 8081 }

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901